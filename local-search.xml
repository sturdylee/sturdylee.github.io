<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>基于 Github Pages + Hexo 搭建个人博客</title>
    <link href="/2023/09/05/my-blog-build-remark/"/>
    <url>/2023/09/05/my-blog-build-remark/</url>
    
    <content type="html"><![CDATA[<h2 id="写作流程"><a class="markdownIt-Anchor" href="#写作流程"></a> 写作流程</h2><ol><li>新建文章</li></ol><blockquote><p>输入命令：<code>hexo new post_name</code>，自动在<code>source/_post</code>目录下生成<code>post_name.md</code>文件</p></blockquote><ol start="2"><li>本地预览</li></ol><blockquote><p>输入命令（blog目录下使用git）：<code>hexo s</code></p></blockquote><ol start="3"><li>确认无误后生成HTML文件</li></ol><blockquote><p>输入命令：<code>hexo g</code></p></blockquote><ol start="4"><li>部署到Github</li></ol><blockquote><p>输入命令：<code>hexo d</code></p></blockquote><h2 id="错误集锦"><a class="markdownIt-Anchor" href="#错误集锦"></a> 错误集锦</h2><h3 id="1-解决-github-port-443-time-out"><a class="markdownIt-Anchor" href="#1-解决-github-port-443-time-out"></a> 1. 解决 Github port 443: Time out</h3><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-comment"># 取消代理</span><br><span class="hljs-string">git</span> <span class="hljs-string">config</span> <span class="hljs-built_in">--global</span> <span class="hljs-built_in">--unset</span> <span class="hljs-string">http</span>.<span class="hljs-string">proxy</span><br><span class="hljs-string">git</span> <span class="hljs-string">config</span> <span class="hljs-built_in">--global</span> <span class="hljs-built_in">--unset</span> <span class="hljs-string">https</span>.<span class="hljs-string">proxy</span><br><br><span class="hljs-comment"># 查看代理</span><br><span class="hljs-string">git</span> <span class="hljs-string">config</span> <span class="hljs-built_in">--global</span> <span class="hljs-built_in">--get</span> <span class="hljs-string">http</span>.<span class="hljs-string">proxy</span><br><span class="hljs-string">git</span> <span class="hljs-string">config</span> <span class="hljs-built_in">--global</span> <span class="hljs-built_in">--get</span> <span class="hljs-string">https</span>.<span class="hljs-string">proxy</span><br></code></pre></td></tr></table></figure><h3 id="2-hexo博客同步管理及迁移"><a class="markdownIt-Anchor" href="#2-hexo博客同步管理及迁移"></a> 2. hexo博客同步管理及迁移</h3><p>远程仓库只会保存hexo发布的静态 HTML文件，而博客源码和主题配置保存在本地。针对此问题，通过git分支实现同一个仓库保存静态网页和博客源码。</p><ul><li><h4 id="新建git分支"><a class="markdownIt-Anchor" href="#新建git分支"></a> 新建git分支</h4><p>使用main分支保存hexo生成的静态网页；新建gh-pages分支来保存博客源码。在github上打开Pages对应的仓库，也就是以&quot;<a href="http://username.github.io">username.github.io</a>&quot;命名的仓库，然后建立gh-pages分支。</p></li><li><h4 id="更改仓库的默认分支"><a class="markdownIt-Anchor" href="#更改仓库的默认分支"></a> 更改仓库的默认分支</h4><p>GitHub的默认分支为main分支，对于一个仓库<code>project_name</code>，当通过<code>git clone https://github.com/username/project_name.io.git</code>下载代码时，实际拉取的是默认分支<code>main</code>对应的代码，而用hexo写博客时，通常关注markdown文件，对于deploy生成的<code>main</code>分支代码并不需要关注。因此可将仓库的默认分支改为保存源码的<code>gh-pages</code>分支，这样通过git clone拉取的就是<code>gh-pages</code>分支代码了。<br />在仓库主页面，通过<code>Settings</code>更改默认分支为<code>gh-pages</code>。<br /><img src="post_1.png" alt="" /></p></li><li><h4 id="修改_configyml中的deploy参数"><a class="markdownIt-Anchor" href="#修改_configyml中的deploy参数"></a> 修改<code>_config.yml</code>中的deploy参数</h4><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-meta"># Deployment</span><br><span class="hljs-meta">## Docs: https:<span class="hljs-comment">//hexo.io/docs/one-command-deployment</span></span><br><span class="hljs-symbol">deploy:</span><br>  - type: git<br><span class="hljs-symbol">    repo:</span> https:<span class="hljs-comment">//github.usernameyusernameylee.github.io</span><br><span class="hljs-symbol">    branch:</span> main<br>  - type: git<br><span class="hljs-symbol">    repo:</span> https:<span class="hljs-comment">//githusernameuusernameurdylee.github.io</span><br><span class="hljs-symbol">    branch:</span> gh-pages<br><span class="hljs-symbol">    extend_dirs:</span> /<br><span class="hljs-symbol">    ignore_hidden:</span> false<br><span class="hljs-symbol">    ignore_pattern:</span><br><span class="hljs-symbol">        public:</span> .<br></code></pre></td></tr></table></figure></li><li><h4 id="推送博客源码"><a class="markdownIt-Anchor" href="#推送博客源码"></a> 推送博客源码</h4><p>把本地hexo项目与<code>gh-pages</code>分支关联，把博客源码推送到该分支：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">git <span class="hljs-keyword">add</span> .<br>git <span class="hljs-keyword">commit</span> -m <span class="hljs-string">&#x27;hexo source post&#x27;</span><br>git push origin gh-pages<br></code></pre></td></tr></table></figure></li><li><h4 id="执行hexo-g-d-生成网站并部署到github"><a class="markdownIt-Anchor" href="#执行hexo-g-d-生成网站并部署到github"></a> 执行<code>hexo g -d</code> 生成网站并部署到GitHub</h4></li><li><h4 id="新环境搭建"><a class="markdownIt-Anchor" href="#新环境搭建"></a> 新环境搭建</h4><p>假设我们换电脑了，要在新环境继续在原有仓库基础上写文章，此时通过<code>git clone</code>将博客源码拉到本地，然后安装、初始化hexo（安装node.js和git）：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git clone git@github<span class="hljs-selector-class">.com</span>:username/username<span class="hljs-selector-class">.github</span><span class="hljs-selector-class">.io</span><span class="hljs-selector-class">.git</span><br>cd username<span class="hljs-selector-class">.github</span><span class="hljs-selector-class">.io</span><br>npm install -g hexo-cli<br>npm install<br>npm install hexo-deployer-git -save<br>hexo new post_name<br>hexo g -d<br></code></pre></td></tr></table></figure><p>以后无论在哪台电脑上，更新以及提交博客，依次执行下列步骤即可：</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">git</span> pull<br><span class="hljs-symbol">git</span> <span class="hljs-keyword">add</span> -A<br><span class="hljs-symbol">git</span> commit -m <span class="hljs-string">&quot;--&quot;</span><br><span class="hljs-symbol">git</span> <span class="hljs-keyword">push</span> origin gh-pages<br><span class="hljs-symbol">hexo</span> clean<br><span class="hljs-symbol">hexo</span> g -d<br></code></pre></td></tr></table></figure></li><li><h4 id="注意事项"><a class="markdownIt-Anchor" href="#注意事项"></a> 注意事项</h4><p>如果gh-pages分支已作为了默认分支并部署了静态文件，那么需要将该分支清空再保存博客源码，并且要将在<code>Pages</code> 页面，将 Branch 设置为<code>main</code>，否则会出现下面的错误。</p></li></ul><blockquote><ul><li>github上切换到<code>gh-pages</code>分支，<code>git clone</code>仓库到本地。</li><li>此时本地会多出一个<code>username.github.io</code>文件夹，删除除<code>.git</code>文件夹外的其他文件夹。</li><li>命令行<code>git add -A</code>把工作区的变化（包括已删除的文件）提交到暂存区（ps:<code>git add .</code>提交的变化不包括已删除的文件）。</li><li>命令行<code>git commint -m &quot;some description&quot;</code>提交。</li><li>命令行<code>git push origin hexo</code>推送到远程hexo分支。此时刷下github，如果正常操作，hexo分支应该已经被清空了。</li><li>复制本地<code>username.github.io</code>文件夹中的<code>.git</code>文件夹到hexo项目根目录下。此时，hexo项目已经变成了和远程hexo分支关联的本地仓库了（该步可以省略）。</li></ul></blockquote><h3 id="3-部署后访问无效在pages-页面将-branch-设置为main稍等片刻重新打开网站"><a class="markdownIt-Anchor" href="#3-部署后访问无效在pages-页面将-branch-设置为main稍等片刻重新打开网站"></a> 3. 部署后访问无效，在<code>Pages</code> 页面，将 Branch 设置为<code>main</code>，稍等片刻重新打开网站。</h3><p><img src="post_2.png" alt="" /></p><h2 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h2><ul><li><strong>Hexo Docs</strong>：<a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a></li><li><strong>Hexo Fluid 用户手册</strong>：<a href="https://fluid-dev.github.io/hexo-fluid-docs/">https://fluid-dev.github.io/hexo-fluid-docs/</a></li><li><a href="https://xie.infoq.cn/article/ac51ce1f6e9434779c35cbb6c">白嫖GitHub Pages，轻松搭建个人博客_Hexo_LigaAI_InfoQ写作社区</a></li><li><a href="https://github.com/hexojs/awesome-hexo">hexojs/awesome-hexo: A curated list of awesome things related to Hexo (github.com)</a></li><li><a href="https://zhuanlan.zhihu.com/p/636418854">解决 Github port 443 : Timed out - 知乎 (zhihu.com)</a></li><li><a href="https://www.jianshu.com/p/fceaf373d797">hexo博客同步管理及迁移 - 简书 (jianshu.com)</a></li><li><a href="https://zhuanlan.zhihu.com/p/71544809">使用git分支保存hexo博客源码到github - 知乎 (zhihu.com)</a></li><li><a href="https://www.zhihu.com/question/21193762">使用hexo，如果换了电脑怎么更新博客？ - 知乎 (zhihu.com)</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>天工开物</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/09/05/hello-world/"/>
    <url>/2023/09/05/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
